apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.kmdev.builditbigger"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        //application id suffix is used to differentiate package name.To upload apk on play store,
        // we need of different package name.So we add application suffix.
        free {
            applicationIdSuffix ".free"
        }
        paid {
            applicationIdSuffix ".paid"
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    testCompile 'junit:junit:4.12'
    compile project(path: ':backend', configuration: 'android-endpoints')
    compile project(':jokejavalib')
    compile project(':jokeandroidlib')
    compile 'com.google.firebase:firebase-ads:9.2.0'
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.22.0'
    compile group: 'com.google.api-client', name: 'google-api-client-android', version: '1.22.0'
}
// source: http://stackoverflow.com/a/31441508
task startGoogleAppEngineTesting(dependsOn: ":backend:appengineRun") {
    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast {
        println "Started google app engine server!"
    }
}

task runInstrumentationTests(dependsOn: ":app:connectedAndroidTest") {
    doLast {
        println "Executed instrumentation tests!"
    }
}

task stopAppEngine(dependsOn: ":backend:appengineStop") {
    doLast {
        println "Stopped google app engine server!"
    }
}

startGoogleAppEngineTesting.finalizedBy runInstrumentationTests
runInstrumentationTests.finalizedBy stopAppEngine
apply plugin: 'com.google.gms.google-services'
